{"remainingRequest":"/Users/hanyue/development/github/vue-components/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hanyue/development/github/vue-components/src/package/kForm/KFormItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hanyue/development/github/vue-components/src/package/kForm/KFormItem.vue","mtime":1578017894998},{"path":"/Users/hanyue/development/github/vue-components/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hanyue/development/github/vue-components/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hanyue/development/github/vue-components/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hanyue/development/github/vue-components/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTY2hlbWEgZnJvbSAnYXN5bmMtdmFsaWRhdG9yJzsKaW1wb3J0IEVtaXR0ZXIgZnJvbSAnQC91dGlscy9taXhpbi9lbWl0dGVyJzsKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ0tGb3JtSXRlbScsCiAgICBjb21wb25lbnROYW1lOiAnS0Zvcm1JdGVtJywKICAgIGluamVjdDogWydmb3JtJ10sCiAgICBtaXhpbnM6IFtFbWl0dGVyXSwKICAgIHByb3BzOiB7CiAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnJwogICAgICAgIH0sCiAgICAgICAgcHJvcDogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIGRlZmF1bHQ6ICcnCiAgICAgICAgfQogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5mb3JtKTsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBlcnJvcjogJycKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLiRvbignaW5wdXQtdmFsaWRhdGUnLCAoKSA9PiB7CiAgICAgICAgICAgIHRoaXMudmFsaWRhdGUoKTsKICAgICAgICB9KQoKICAgICAgICB0aGlzLmRpc3BhdGNoKCdLRm9ybScsICdmb3JtLWl0ZW0tdmFsaWRhdGUnLCB0aGlzKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgdmFsaWRhdGUoKSB7CiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5mb3JtLm1vZGVsW3RoaXMucHJvcF07CiAgICAgICAgICAgIGNvbnN0IHJ1bGVzID0gdGhpcy5mb3JtLnJ1bGVzW3RoaXMucHJvcF07CgogICAgICAgICAgICBjb25zdCBkZXNjID0geyBbdGhpcy5wcm9wXTogcnVsZXMgfTsKCiAgICAgICAgICAgIGNvbnN0IHNjaGVtYSA9IG5ldyBTY2hlbWEoZGVzYyk7CgogICAgICAgICAgICByZXR1cm4gc2NoZW1hLnZhbGlkYXRlKHsgW3RoaXMucHJvcF06IHZhbHVlIH0sIGVycm9ycyA9PiB7CiAgICAgICAgICAgICAgICBpZiAoZXJyb3JzKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvciA9IGVycm9yc1swXS5tZXNzYWdlOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmVycm9yID0gJyc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["KFormItem.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"KFormItem.vue","sourceRoot":"src/package/kForm","sourcesContent":["<template>\n    <div>\n        <label v-text=\"label\"></label>\n        <slot></slot>\n        <p v-if=\"error\" v-text=\"error\"></p>\n    </div>\n</template>\n\n<script>\n    import Schema from 'async-validator';\n    import Emitter from '@/utils/mixin/emitter';\n    export default {\n        name: 'KFormItem',\n        componentName: 'KFormItem',\n        inject: ['form'],\n        mixins: [Emitter],\n        props: {\n            label: {\n                type: String,\n                default: ''\n            },\n            prop: {\n                type: String,\n                default: ''\n            }\n        },\n        data() {\n            // console.log(this.form);\n            return {\n                error: ''\n            }\n        },\n        mounted() {\n            this.$on('input-validate', () => {\n                this.validate();\n            })\n\n            this.dispatch('KForm', 'form-item-validate', this);\n        },\n        methods: {\n            validate() {\n                const value = this.form.model[this.prop];\n                const rules = this.form.rules[this.prop];\n\n                const desc = { [this.prop]: rules };\n\n                const schema = new Schema(desc);\n\n                return schema.validate({ [this.prop]: value }, errors => {\n                    if (errors) {\n                        this.error = errors[0].message;\n                    } else {\n                        this.error = '';\n                    }\n                })\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}